service: kl

plugins:
  - serverless-iam-roles-per-function
  - serverless-step-functions

provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage, 'Klayers-defaultp38'}
  region: ${file(../infra/terraform.tfvars.json):aws_region.${self:provider.stage}}
  profile: ${file(../infra/terraform.tfvars.json):aws_profile.${self:provider.stage}}
  versionFunctions: false
  logRetentionInDays: 90
  environment:
    STAGE: ${self:provider.stage}
    LOGLEVEL: "INFO"

custom:
  awsRegion: ${self:provider.region}
  s3LayersName: ${ssm:/${self:service.name}/${self:provider.stage}/s3bucket_layers}
  s3LayersArn: ${ssm:/${self:service.name}/${self:provider.stage}/s3bucket_layers_arn}
  dbLayers: ${ssm:/${self:service.name}/${self:provider.stage}/dynamodb_layers_table}
  dbLayersArn: ${ssm:/${self:service.name}/${self:provider.stage}/dynamodb_layers_table_arn}
  dbLayersStreamArn: ${ssm:/${self:service.name}/${self:provider.stage}/dynamodb_layers_stream_arn}
  dbReqs: ${ssm:/${self:service.name}/${self:provider.stage}/dynamodb_requirements_table}
  dbReqsArn: ${ssm:/${self:service.name}/${self:provider.stage}/dynamodb_requirements_table_arn}
  lambdaPrefix: ${ssm:/${self:service.name}/${self:provider.stage}/lambda_prefix}
  lambdaErrorSNSArn: ${ssm:/${self:service.name}/${self:provider.stage}/lambda_error_notification_arn}
  pipelineName: ${self:service.name}-${self:provider.stage}-pipeline

  # Github
  githubSSHKeyParameter: /${self:service.name}/${self:provider.stage}/github_ssh_key
  githubRepo: ${ssm:/${self:service.name}/${self:provider.stage}/github_repo}
  
  # Slack
  slackTokenParameter: /${self:service.name}/${self:provider.stage}/slack_token
  
functions:
  - ${file(sls_components/functions_pipeline.yml)}
  - ${file(sls_components/functions_publish.yml)}
  - ${file(sls_components/functions_invoke_pipeline.yml)}
  - ${file(sls_components/functions_slack.yml)}
  - ${file(sls_components/functions_streams.yml)}

stepFunctions:
  stateMachines:
    invoke_pipelines:
      ${file(sls_components/state_machine_invoke_pipelines.yml)}
    pipeline:
      ${file(sls_components/state_machine_pipeline.yml)}
    publish:
      ${file(sls_components/state_machine_publish.yml)}

package:
  exclude:
    - package-lock.json
    - package.json
    - node_modules/**
    - serverless.yml
    - .gitignore
    - .serverless/**
    - config/**
    - sls_components/**
    - README.MD
  include:
    - config/${self:provider.stage}/**
